#lang concolic-hop/lang
;; this file generated by convert-soft-contract.rkt using member.sch as input
(require concolic-hop/ctc concolic-hop/lib concolic-hop/convert-it)
(define-lump L)
(define-concolic-test
 member
 #:inputs
 (|•(0 any/s any/c)|
  (or/s
   (->s integer integer)
   (list/s boolean (list-of integer))
   integer
   boolean))
 (|•(1 (list-of any/s) (listof any/c))|
  (list-of
   (or/s
    (->s integer integer)
    (list/s boolean (list-of integer))
    integer
    boolean)))
 #:prop
 (prop-not-exn
  (λ ()
    (define (_member x l)
      (cond
       ((empty? l) empty)
       ((equal? x (car l)) l)
       (else (_member x (cdr l)))))
    (define-id-with-ctc
     (-> any/c (listof any/c) boolean?)
     _member
     member
     bug
     bug)
    (member
     (apply-ctc
      any/c
      (convert-it |•(0 any/s any/c)| any/s L)
      bad-input
      no-blame
      |argument of member|)
     (apply-ctc
      (listof any/c)
      (convert-it |•(1 (list-of any/s) (listof any/c))| (list-of any/s) L)
      bad-input
      no-blame
      |argument of member|)))))
(define (counterexample)
  (define test-result (concolic-test member #:all? #f #:statistics? #t))
  (define witness (list-ref test-result 0))
  (define stats (list-ref test-result 1))
  (vector
   (concretize-input member witness)
   '()
   `#hash((solve-count . ,(concolic-statistics-solve-count stats))
          (solve-real-nongc-time
           .
           ,(concolic-statistics-solve-real-nongc-time stats))
          (test-count . ,(concolic-statistics-test-count stats)))))
(provide counterexample (rename-out (member test-property)))
(module+ main (counterexample))
