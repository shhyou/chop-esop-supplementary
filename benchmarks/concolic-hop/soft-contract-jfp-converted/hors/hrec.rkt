#lang concolic-hop/lang
;; this file generated by convert-soft-contract.rkt using hrec.sch as input
(require concolic-hop/ctc concolic-hop/lib concolic-hop/convert-it)
(define-lump L)
(define-concolic-test
 hrec
 #:inputs
 (|•(0 integer integer?)| integer)
 #:prop
 (prop-not-exn
  (λ ()
    (define (_f g x) (if (<= x 0) (g x) (_f (λ (x) (_f g x)) (g x))))
    (define (_main n) (_f add1 n))
    (define-id-with-ctc
     (-> (-> integer? integer?) integer? integer?)
     _f
     f
     bug
     bug)
    (define-id-with-ctc
     (-> integer? (and/c integer? (>=/c 0)))
     _main
     main
     bug
     bug)
    (main
     (apply-ctc
      integer?
      (convert-it |•(0 integer integer?)| integer L)
      bad-input
      no-blame
      |argument of main|)))))
(define (counterexample)
  (define test-result
    (concolic-test hrec #:all? #f #:path-limit 1000 #:statistics? #t))
  (define witness (list-ref test-result 0))
  (define stats (list-ref test-result 1))
  (vector
   (concretize-input hrec witness)
   '()
   `#hash((solve-count . ,(concolic-statistics-solve-count stats))
          (solve-real-nongc-time
           .
           ,(concolic-statistics-solve-real-nongc-time stats))
          (test-count . ,(concolic-statistics-test-count stats)))))
(provide counterexample (rename-out (hrec test-property)))
(module+ main (counterexample))
