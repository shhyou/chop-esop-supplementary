#lang concolic-hop/lang
;; this file generated by convert-soft-contract.rkt using fold-div.sch as input
(require concolic-hop/ctc concolic-hop/lib concolic-hop/convert-it)
(define-lump L)
(define-concolic-test
 fold-div
 #:inputs
 (|M(rand rand (->s integer) (-> integer?))| (->s integer integer))
 (|•(0 integer integer?)| integer)
 (|•(1 integer integer?)| integer)
 #:prop
 (prop-not-exn
  (λ ()
    (define _rand
      (convert-it |M(rand rand (->s integer) (-> integer?))| (->s integer) L))
    (define-id-with-ctc (-> integer?) _rand rand bad-input bug)
    (define (_foldl f z l) (if (empty? l) z (_foldl f (f z (car l)) (cdr l))))
    (define (_randpos) (let ((n (rand))) (if (>= n 0) n (_randpos))))
    (define (_mk-list n)
      (if (<= n 0) empty (cons (_randpos) (_mk-list (- n 1)))))
    (define (_main n m) (_foldl / m (_mk-list n)))
    (define-id-with-ctc
     (-> (-> real? real? real?) real? (listof real?) real?)
     _foldl
     foldl
     bug
     bug)
    (define-id-with-ctc (-> integer?) _randpos randpos bug bug)
    (define-id-with-ctc
     (-> integer? (listof (and/c integer? positive?)))
     _mk-list
     mk-list
     bug
     bug)
    (define-id-with-ctc (-> integer? integer? real?) _main main bug bug)
    (main
     (apply-ctc
      integer?
      (convert-it |•(0 integer integer?)| integer L)
      bad-input
      no-blame
      |argument of main|)
     (apply-ctc
      integer?
      (convert-it |•(1 integer integer?)| integer L)
      bad-input
      no-blame
      |argument of main|)))))
(define (counterexample)
  (define test-result (concolic-test fold-div #:all? #f #:statistics? #t))
  (define witness (list-ref test-result 0))
  (define stats (list-ref test-result 1))
  (vector
   (concretize-input fold-div witness)
   '()
   `#hash((solve-count . ,(concolic-statistics-solve-count stats))
          (solve-real-nongc-time
           .
           ,(concolic-statistics-solve-real-nongc-time stats))
          (test-count . ,(concolic-statistics-test-count stats)))))
(provide counterexample (rename-out (fold-div test-property)))
(module+ main (counterexample))
